#https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
tilkynna:
  scheduler:  
    poolSize: 4
  templates:
    storage: FileSystemContentRepository
    location: tmp/templates
  generate: 
    hostname: http://localhost:9981
    threading:
      batchSize: 30
      poolSize: 30
      maxPoolSize: 50
      queueCapacity: 100
    monitorPendingRequests: #config for monitoring PENDING report requests and publishing them to be processed 
      #1000ms = 1second
      fixedRateInMilliseconds: 1 # make this like 100 ms
      initialDelayInMilliseconds: 5000
    monitorFailedRequests: #config for monitoring FAILED report requests and re enqueing them
      fixedRateInMilliseconds: 5000
      initialDelayInMilliseconds: 5000
    monitorStalledRequests: 
      fixedRateInMilliseconds: 5000
      initialDelayInMilliseconds: 5000
    retry: 
      maxAttempts: 3
      backOffPeriodInMilliseconds: 5000
  generatedreports:
    #storage: FileSystemContentRepository
    location: tmp/reports    

server:
  port: 9981
  # EMBEDDED SERVER CONFIGURATION
#  tomcat:
#    maxThreads: 400 # Maximum amount of worker threads.
#    minSpareThreads: 20 # Minimum amount of worker threads.
spring:
  datasource:
    initialization-mode: always
    url: jdbc:postgresql://localhost:5432/tilkynna?user=postgres&password=postgres
  flyway:
    enabled: true
    group: true
    locations: classpath:db/migration/{vendor}
    schemas: _reports
  jpa:
    generate-ddl: false
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        default_schema: _reports
        # Fix Postgres JPA Error:
        # Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
        temp:
          use_jdbc_metadata_defaults: false
    show-sql: false
    
#Security Properties
rest:
  security:
    # This property toggles whether Oauth 2.0 based security is enabled. A 'disabled' value removes all security.
    enabled: true
    apiMatcher: "/**"
    cors:
      allowedOrigins: "*"
      allowed-headers: "*"
      allowed-methods: "GET,POST,PUT,PATCH,DELETE,OPTIONS"
      maxAge: 3600

# This section is only used of rest.security.enabled = true
security:
  oauth2:
    resource:
      id: tilkynna
      jwt:
        keyValue: "-----BEGIN PUBLIC KEY-----\nMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA1fD6YzaIslie1AQpdyDYyrukqjo4/71G9Us++fDTLMOujuJBgDF2A0p1cvEpc8r3fzwJq2wxfJDXotRp9X/81jDv/uxyO7ifhGcAbxg/wVEz4YmQE5bXFM0IEMhU1VDE17i0CTiwe2WV6G69JSAm7xMChl284zSCZOhlALe25mBg0zkTfmcZIUdkloBsWe94FNsQ0IljLyRiwoEZO0Xrp91eUrUvQm6He3X716zIg+YUzoWk+KVNHuL+pk6Aefy1c+yFia57MTA384ORh8MiGRZ9YuM69uB6oPkFHkwFNWbDW9G+yzcpcXsc0BdQVwsZ9liHbkgRHGthbeC7euG3THEJkaZXAInr2mwcyaNHzCQIOo6cngNOU5S3pLnHNyEM1FG40AYhRj8/uwJ4e//uBbBOUvg7Fo5cnG4FOWLIN35sQUQvht30h+UmG/lb4ualkx/GkDOfyTwejqt2mTLWkblV3vekX7uI+h4M1lFebpAKF602r3qK80PNgPS56BwjGSxLhfllxhN6nhbjPZtaiTfFu0mFTHkRPEo7t2ThDBFMZ7EeA6Ot46MS1D/t+HwjlJ/vnZAH3RcdyUQgp4wJeCJQkd26XlaU5MT3jCFLMj1RLLVhif90gj2mCN+kO/wnSRH3jrrKL5nbgUJNL38D+1RVAfywEdeijIZCbvExC18CAwEAAQ==\n-----END PUBLIC KEY-----"



# This setting exposes all the actuator routes, some of which expose sensitive info. Ensure that only the /health route is exposed
# publically for readiness and liveness probes in non-dev environments.
management:
  endpoints:
    web:
      exposure:
        include: "info, health"    
    
logging:
  level:    
    root: INFO
    org.springframework.security: ERROR
    org.tilkynna: INFO
    com.jcraft.jsch: ERROR
    org.tilkynna.report.generate: INFO
    #org.springframework.orm.jpa: DEBUG      
    #org.springframework.transaction: DEBUG
    #org.hibernate.engine: TRACE
    #org.hibernate.SQL: DEBUG    
    #org.hibernate.type:
    #      descriptor:
    #        sql:
    #          BasicBinder: TRACE

    
    